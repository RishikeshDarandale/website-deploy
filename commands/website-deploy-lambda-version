#!/usr/bin/env node

const { Command } = require("commander");
const { LambdaClient } = require("@aws-sdk/client-lambda");
const { fromNodeProviderChain } = require("@aws-sdk/credential-providers");
const Logger = require("../libs/logger.js");
const LambdaDeploy = require("../libs/lambda-deploy.js");

const logger = new Logger();
const program = new Command();

// deploy command
program
  .name("version")
  .arguments("<functionName>")
  .option("--profile <profileName>", "AWS credential profile name")
  .option("--region <regionName>", "AWS region name", "us-east-1")
  .option("--debug", "Log extra debug information")
  .option(
    "--count [count]",
    "Latest count number of versions to be displayed",
    10,
  )
  .action(function (functionName, options) {
    if (options.profile !== undefined) {
      credentials = fromNodeProviderChain({
        profile: options.profile,
      });
    } else {
      credentials = fromNodeProviderChain();
    }
    const client = new LambdaClient({
      region: options.region,
      credentials,
    });
    let lambdaDeploy = new LambdaDeploy(client);
    try {
      lambdaDeploy.versions(functionName, options).then(function (versions) {
        if (options.debug) {
          logger.debug("All versions: " + JSON.stringify(versions));
        }
        versions.forEach((version) => {
          logger.info(
            "Version: " +
              version.Version +
              " modified at: " +
              version.LastModified,
          );
        });
      });
    } catch (exception) {
      logger.error(exception.message);
      process.exit(1);
    }
  })
  .parse(process.argv);

// display the usage
if (!program.args.length && program.args.length < 2) program.help();
