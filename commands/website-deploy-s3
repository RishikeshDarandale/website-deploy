#!/usr/bin/env node

const { Command } = require("commander");
const AWS = require("aws-sdk");
const { S3Client } = require("@aws-sdk/client-s3");
const { fromNodeProviderChain } = require("@aws-sdk/credential-providers");
const S3Deploy = require("../libs/s3-deploy.js");
const Logger = require("../libs/logger.js");

const logger = new Logger();
const program = new Command();

// deploy command
program
  .name("s3")
  .usage("[options] <srcDirectory> <bucketName> ")
  .arguments("<srcDirectory> <bucketName>")
  .option("--profile <profileName>", "AWS credential profile name")
  .option("--region <regionName>", "AWS region name", "us-east-1")
  .option(
    "--delete",
    "Files that exist in the destination but not in the source are deleted during sync",
  )
  .option("--debug", "Log extra debug information")
  .action(function (srcDirectory, bucketName, options) {
    const message =
      "Deploying from " + srcDirectory + " to s3 bucket " + bucketName;
    logger.info(message);
    let credentials;
    if (options.profile !== undefined) {
      credentials = fromNodeProviderChain({
        profile: options.profile,
      });
    } else {
      credentials = fromNodeProviderChain();
    }
    const client = new S3Client({
      region: options.region,
      credentials,
    });
    let s3deploy = new S3Deploy(client);
    try {
      s3deploy.syncBucket(srcDirectory, bucketName, options);
    } catch (exception) {
      logger.error(exception.message);
      process.exit(1);
    }
  })
  .parse(process.argv);

// display the usage
if (!program.args.length && program.args.length < 3) program.help();
